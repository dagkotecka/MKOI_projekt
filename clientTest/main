import socket
import sys
from Crypto.PublicKey import RSA
import base64
from AESHelper import AESCipher

# clients private key
clientKey = open('client.key', 'r')
clientPrivateKey = RSA.importKey(clientKey.read(), passphrase='projekt')

serverKey = open('server.key', 'r')
serverPrivateKey = RSA.importKey(serverKey.read(), passphrase='projekt')

aesCipherObj = AESCipher(serverPrivateKey.exportKey())
encryptedServerPrivateKey = aesCipherObj.encrypt(clientPrivateKey.exportKey())

# Create a TCP/IP socket
sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

# Connect the socket to the port where the server is listening
server_address = ('localhost', 10000)
print 'connecting to %s port %s' % server_address
sock.connect(server_address)
try:

    # Send data encrypted Server Private Key
    sock.sendall(encryptedServerPrivateKey)

    # Look for the response
    amount_received = 0
    amount_expected = len(encryptedServerPrivateKey)

    while amount_received < amount_expected:
        data = sock.recv(32)
        amount_received += len(data)
        print >> sys.stderr, 'received "%s"' % data
        sock.sendall(data)


finally:
    print >> sys.stderr, 'closing socket'
    sock.close()