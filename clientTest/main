import socket
from Crypto.PublicKey import RSA
from AESHelper import AESCipher

clientKey = open('client.key', 'r')
clientPrivateKey = RSA.importKey(clientKey.read(), passphrase='projekt')

serverKey = open('server.key', 'r')
serverPrivateKey = RSA.importKey(serverKey.read(), passphrase='projekt')

aesCipherObj = AESCipher(serverPrivateKey.exportKey())
encryptedServerPrivateKey = aesCipherObj.encrypt(clientPrivateKey.exportKey())

sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

server_address = ('localhost', 8888)
print 'connecting to %s port %s' % server_address
sock.connect(server_address)
try:
    sock.sendall(encryptedServerPrivateKey)
    amount_received = 0
    amount_expected = len(encryptedServerPrivateKey)

    while amount_received < amount_expected:
        data = sock.recv(32)
        amount_received += len(data)
        print 'received "%s"' % data
        sock.sendall(data)

finally:
    print 'closing socket'
    sock.close()