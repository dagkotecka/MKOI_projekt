import os

from Crypto.PublicKey import RSA

from AESHelper import AESCipher
import socket
import sys
import glob

serverKey = open('server.key', 'r')
serverPrivKey = RSA.importKey(serverKey.read(), passphrase='projekt')

clientKey = open('client.key', 'r')
clientPrivateKey = RSA.importKey(clientKey.read(), passphrase='projekt')

sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
server_address = ('127.0.0.1', 9000)
print 'Server on %s port %s' % server_address

sock.bind(server_address)

sock.listen(1000)

while True:
    print 'waiting for a connection'
    connection, client_address = sock.accept()
    try:
        print 'connection from', client_address

        data = connection.recv(5000)
        if data:
            print 'sending data back to the client'
            aesCipherObj = AESCipher(serverPrivKey.exportKey())
            encrypted = aesCipherObj.decrypt(data)
            ck = clientPrivateKey.exportKey()
            if(ck == encrypted):
                connection.sendall("Connection approved")
                while True:
                    data = connection.recv(100)
                    if data == "get-listFiles":
                        print glob.glob(os.getcwd() + "/files/*")
                        listofFiles = []
                        listofFiles = glob.glob(os.getcwd() + "/files/*")
                        for lf in listofFiles:
                            print lf
                            connection.send(lf)

                        connection.send("END")
                    if "get-file" in data:
                        listofFiles = []
                        listofFiles = glob.glob(os.getcwd() + "/files/*")
                        for lf in listofFiles:
                            if lf in data:
                                f = open(lf, 'r')
                                a = f.read()
                                connection.sendall(a)
                        connection.sendall("sending file")
                        connection.sendall("END")


                    if "post-file" in data:
                        data = connection.recv(14)
                        print 'received "%s"' % data
                        f = open("test.txt", "w")
                        f.write(data)
                        f.close()
                        connection.sendall("saving file")
                        connection.sendall("END")







            else:
                connection.send("Not Approved")
        else:
            print >> sys.stderr, 'no more data from', client_address
            break

    finally:
        connection.close()

